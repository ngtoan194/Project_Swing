/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duan;

import Model.QuanLySanPham;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vu Tuan
 */
public class QLSanPham extends javax.swing.JDialog {

    private Connection cnt = new connectDB.connectDB().getConnection();
    private DecimalFormat moneyformat = new DecimalFormat("0.00");

    public QLSanPham(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Quản lý sản phẩm");
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ButtonStatus(true);
        LoadProductList();
        LoadNhaCC();
        LoadLoaiHang();
        SetDefaultData();
        Lb_Currency_GiaNhap.setVisible(false);
        Lb_Currency_GiaXuat.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Lb_Masanpham = new javax.swing.JLabel();
        Lb_Tensanpham = new javax.swing.JLabel();
        Lb_Loaihang = new javax.swing.JLabel();
        Lb_Donvitinh = new javax.swing.JLabel();
        Lb_Dongianhap = new javax.swing.JLabel();
        Lb_Dongiaxuat = new javax.swing.JLabel();
        Lb_Soluong = new javax.swing.JLabel();
        Txt_Masanpham = new javax.swing.JTextField();
        Txt_Tensanpham = new javax.swing.JTextField();
        Txt_Dongianhap = new javax.swing.JTextField();
        Txt_Dongiaxuat = new javax.swing.JTextField();
        Txt_Soluong = new javax.swing.JTextField();
        Cbb_Loaihang = new javax.swing.JComboBox<>();
        Btn_Them = new javax.swing.JButton();
        Btn_Sua = new javax.swing.JButton();
        Btn_Xoa = new javax.swing.JButton();
        Btn_Luu = new javax.swing.JButton();
        Btn_Huy = new javax.swing.JButton();
        Table = new javax.swing.JScrollPane();
        Tbl_Sanpham = new javax.swing.JTable();
        Txt_Donvitinh = new javax.swing.JTextField();
        Lb_Nhacc = new javax.swing.JLabel();
        Cbb_Nhacc = new javax.swing.JComboBox<>();
        Txt_Timkiem = new javax.swing.JTextField();
        Lb_Timkiem = new javax.swing.JLabel();
        Lb_Currency_GiaNhap = new javax.swing.JLabel();
        Lb_Currency_GiaXuat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Quản Lý Sản Phẩm");

        Lb_Masanpham.setText("Mã Sản Phẩm");

        Lb_Tensanpham.setText("Tên Sản Phẩm");

        Lb_Loaihang.setText("Loại Hàng");

        Lb_Donvitinh.setText("Đơn Vị Tính");

        Lb_Dongianhap.setText("Đơn Giá Nhập");

        Lb_Dongiaxuat.setText("Đơn Giá Xuất");

        Lb_Soluong.setText("Số Lượng");

        Txt_Masanpham.setEditable(false);
        Txt_Masanpham.setToolTipText("Mã Sản Phẩm");
        Txt_Masanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_MasanphamActionPerformed(evt);
            }
        });

        Txt_Tensanpham.setEditable(false);
        Txt_Tensanpham.setToolTipText("Tên Sản Phẩm");

        Txt_Dongianhap.setEditable(false);
        Txt_Dongianhap.setToolTipText("Đơn Giá Nhập");
        Txt_Dongianhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_DongianhapActionPerformed(evt);
            }
        });

        Txt_Dongiaxuat.setEditable(false);
        Txt_Dongiaxuat.setToolTipText("Đơn Giá Xuất");

        Txt_Soluong.setEditable(false);
        Txt_Soluong.setToolTipText("Số Lượng");

        Cbb_Loaihang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn--" }));
        Cbb_Loaihang.setToolTipText("Loại Hàng");

        Btn_Them.setText("Thêm");
        Btn_Them.setToolTipText("Thêm Sản Phẩm");
        Btn_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_ThemActionPerformed(evt);
            }
        });

        Btn_Sua.setText("Sửa");
        Btn_Sua.setToolTipText("Sửa Sản Phẩm");
        Btn_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_SuaActionPerformed(evt);
            }
        });

        Btn_Xoa.setText("Xóa");
        Btn_Xoa.setToolTipText("Xóa Sản Phẩm");
        Btn_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_XoaActionPerformed(evt);
            }
        });

        Btn_Luu.setText("Lưu");
        Btn_Luu.setToolTipText("Lưu Thao Tác");
        Btn_Luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_LuuActionPerformed(evt);
            }
        });

        Btn_Huy.setText("Hủy");
        Btn_Huy.setToolTipText("Hủy Thao Tác");
        Btn_Huy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_HuyActionPerformed(evt);
            }
        });

        Tbl_Sanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Nhà Cung Cấp", "Loại Hàng", "Đơn Vị Tính", "Đơn Giá Nhập", "Đơn Giá Xuất", "Số Lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tbl_Sanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tbl_SanphamMouseClicked(evt);
            }
        });
        Table.setViewportView(Tbl_Sanpham);
        if (Tbl_Sanpham.getColumnModel().getColumnCount() > 0) {
            Tbl_Sanpham.getColumnModel().getColumn(0).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(1).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(2).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(3).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(4).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(5).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(6).setResizable(false);
            Tbl_Sanpham.getColumnModel().getColumn(7).setResizable(false);
        }

        Txt_Donvitinh.setEditable(false);
        Txt_Donvitinh.setToolTipText("Đơn Vị Tính");

        Lb_Nhacc.setText("Nhà Cung Cấp");

        Cbb_Nhacc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn--" }));
        Cbb_Nhacc.setToolTipText("Nhà Cung Cấp");
        Cbb_Nhacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cbb_NhaccActionPerformed(evt);
            }
        });

        Txt_Timkiem.setToolTipText("Tìm Kiếm Sản Phẩm");
        Txt_Timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_TimkiemActionPerformed(evt);
            }
        });
        Txt_Timkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Txt_TimkiemKeyReleased(evt);
            }
        });

        Lb_Timkiem.setText("Tìm Kiếm");

        Lb_Currency_GiaNhap.setText("$");

        Lb_Currency_GiaXuat.setText("$");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Table, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Lb_Nhacc)
                            .addComponent(Lb_Loaihang)
                            .addComponent(Lb_Tensanpham)
                            .addComponent(Lb_Masanpham))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Txt_Tensanpham)
                            .addComponent(Txt_Masanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Cbb_Nhacc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Cbb_Loaihang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Lb_Soluong)
                            .addComponent(Lb_Dongiaxuat)
                            .addComponent(Lb_Dongianhap)
                            .addComponent(Lb_Donvitinh)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Txt_Soluong)
                    .addComponent(Txt_Donvitinh, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(Txt_Dongianhap)
                    .addComponent(Txt_Dongiaxuat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lb_Currency_GiaNhap)
                    .addComponent(Lb_Currency_GiaXuat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(246, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Btn_Them, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Btn_Sua, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Btn_Xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Btn_Luu, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Btn_Huy, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Lb_Timkiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Masanpham)
                            .addComponent(Txt_Masanpham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Tensanpham)
                            .addComponent(Txt_Tensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Nhacc)
                            .addComponent(Cbb_Nhacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Loaihang)
                            .addComponent(Cbb_Loaihang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Donvitinh)
                            .addComponent(Txt_Donvitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Dongianhap)
                            .addComponent(Txt_Dongianhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lb_Currency_GiaNhap))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Dongiaxuat)
                            .addComponent(Txt_Dongiaxuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lb_Currency_GiaXuat))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lb_Soluong)
                            .addComponent(Txt_Soluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Them)
                    .addComponent(Btn_Sua)
                    .addComponent(Btn_Xoa)
                    .addComponent(Btn_Luu)
                    .addComponent(Btn_Huy))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txt_Timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lb_Timkiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Table, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_LuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_LuuActionPerformed

        if (Btn_Them.isEnabled() == true) {
            if (Txt_Tensanpham.getText().isEmpty() | Txt_Donvitinh.getText().isEmpty() | Txt_Dongianhap.getText().isEmpty() | Txt_Dongiaxuat.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bạn không được bỏ trống các ô!");
            } else if (Cbb_Nhacc.getSelectedIndex() == 0 | Cbb_Loaihang.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Bạn phải chọn nhà cung cấp và loại hàng!");
            } else if (CheckNum(Txt_Dongianhap.getText()) == false | CheckNum(Txt_Dongiaxuat.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Bạn phải nhập giá trị là số vào các ô\n \"Đơn giá nhập\" và \"Đơn giá xuất!\"");
            } else if(CheckNumZero(Txt_Dongianhap.getText()) == false | CheckNumZero(Txt_Dongiaxuat.getText()) == false){
                JOptionPane.showMessageDialog(null, "Bạn không được điền giá Nhập/Xuất giá trị nhỏ hơn 0");
            }else {
                String MaLh = null;
                try {
                    Statement stm = cnt.createStatement();
                    ResultSet rs = stm.executeQuery("SELECT MALH FROM LOAIHANG WHERE TENLH = '" + Cbb_Loaihang.getSelectedItem() + "' AND STATUS = 1");
                    while (rs.next()) {
                        MaLh = rs.getString(1);
                    }
                } catch (Exception e) {
                }
                int XacNhanThem = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn thêm sản phẩm này?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
                if (XacNhanThem == JOptionPane.YES_OPTION) {
                    boolean Status = new Model.QuanLySanPham().ThemSanPham(Txt_Masanpham.getText(), Txt_Tensanpham.getText(), MaLh, Cbb_Nhacc.getSelectedItem().toString(), Txt_Donvitinh.getText(), Txt_Dongianhap.getText(), Txt_Dongiaxuat.getText());
                    if (Status == true) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Thêm không thành công!");
                    }
                    LoadProductList();
                    ButtonStatus(true);
                    TextFieldsStatus(false);
                    SetDefaultData();
                }
            }
        } else if (Btn_Luu.isEnabled() == true) {
            if (Txt_Tensanpham.getText().isEmpty() | Txt_Donvitinh.getText().isEmpty() | Txt_Dongianhap.getText().isEmpty() | Txt_Dongiaxuat.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Bạn không được bỏ trống các ô!");
            } else if (Cbb_Nhacc.getSelectedIndex() == 0 | Cbb_Loaihang.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Bạn phải chọn nhà cung cấp và loại hàng!");
            } else if (CheckNum(Txt_Dongianhap.getText()) == false | CheckNum(Txt_Dongiaxuat.getText()) == false) {
                JOptionPane.showMessageDialog(null, "Bạn phải nhập giá trị là số vào các ô\n \"Đơn giá nhập\" và \"Đơn giá xuất!\"");
            } else if(CheckNumZero(Txt_Dongianhap.getText()) == false | CheckNumZero(Txt_Dongiaxuat.getText()) == false){
                JOptionPane.showMessageDialog(null, "Bạn không được điền giá Nhập/Xuất giá trị nhỏ hơn 0");
            }else {
                String MaLh = null;
                try {
                    Statement stm = cnt.createStatement();
                    ResultSet rs = stm.executeQuery("SELECT MALH FROM LOAIHANG WHERE TENLH = '" + Cbb_Loaihang.getSelectedItem() + "' AND STATUS = 1");
                    while (rs.next()) {
                        MaLh = rs.getString(1);
                    }
                } catch (Exception e) {
                }
                int XacNhanSua = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn sửa?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
                if (XacNhanSua == JOptionPane.YES_OPTION) {
                    boolean Status = new Model.QuanLySanPham().SuaSanPham(Txt_Masanpham.getText(), Txt_Tensanpham.getText(), MaLh, Cbb_Nhacc.getSelectedItem().toString(), Txt_Donvitinh.getText(), Txt_Dongianhap.getText(), Txt_Dongiaxuat.getText());
                    if (Status == true) {
                        JOptionPane.showMessageDialog(null, "Sửa thành công!");
                        ButtonStatus(true);
                        TextFieldsStatus(false);
                        LoadProductList();
                        SetDefaultData();
                        Lb_Currency_GiaNhap.setVisible(false);
                        Lb_Currency_GiaXuat.setVisible(false);
                    } else {
                        JOptionPane.showMessageDialog(null, "Sửa không thành công!");
                    }
                }
            }
        }
    }//GEN-LAST:event_Btn_LuuActionPerformed

    private void Btn_HuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_HuyActionPerformed
        SetDefaultData();
        TextFieldsStatus(false);
        ButtonStatus(true);
        Btn_Luu.setEnabled(false);
        Lb_Currency_GiaNhap.setVisible(false);
        Lb_Currency_GiaXuat.setVisible(false);
    }//GEN-LAST:event_Btn_HuyActionPerformed

    private void Btn_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_ThemActionPerformed
        Txt_Masanpham.setText("");
        Txt_Tensanpham.setText("");
        TextFieldsStatus(true);
        Txt_Dongianhap.setText("");
        Txt_Dongiaxuat.setText("");
        Txt_Donvitinh.setText("");
        Txt_Soluong.setText("0");
        Cbb_Nhacc.setSelectedIndex(0);
        Cbb_Loaihang.setSelectedIndex(0);
        ButtonStatus(false);
        Btn_Them.setEnabled(true);
        Btn_Luu.setEnabled(true);
        Btn_Huy.setEnabled(true);

        Statement stm = null;
        String LastIdTemp = null;
        int LastId = 0;
        ArrayList Id = new ArrayList();
        try {
            stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT MASP FROM SANPHAM WHERE STATUS = 1");
            while (rs.next()) {
                Id.add(rs.getString(1));
            }

            LastIdTemp = Id.get(Id.size() - 1).toString();
            LastId = Integer.parseInt(LastIdTemp.substring(2)) + 1;
            if (LastId < 10) {
                Txt_Masanpham.setText("SP0" + LastId);
            } else {
                Txt_Masanpham.setText("SP" + LastId);
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_Btn_ThemActionPerformed

    private void Tbl_SanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tbl_SanphamMouseClicked
        if (Btn_Them.isEnabled() == false && Btn_Xoa.isEnabled() == false) {
            Txt_Masanpham.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 0).toString());
            Txt_Tensanpham.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 1).toString());
            Cbb_Nhacc.setSelectedItem(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 2));
            this.Cbb_Loaihang.setSelectedItem(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 3));
            Txt_Donvitinh.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 4).toString());
            Txt_Dongianhap.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 5).toString().replace("$", ""));
            Txt_Dongiaxuat.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 6).toString().replace("$", ""));
            Txt_Soluong.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 7).toString());
        } else {
            ButtonStatus(true);
            Txt_Masanpham.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 0).toString());
            Txt_Tensanpham.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 1).toString());
            Cbb_Nhacc.setSelectedItem(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 2));
            Cbb_Loaihang.setSelectedItem(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 3));
            Txt_Donvitinh.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 4).toString());
            Txt_Dongianhap.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 5).toString());
            Txt_Dongiaxuat.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 6).toString());
            Txt_Soluong.setText(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 7).toString());
        }
    }//GEN-LAST:event_Tbl_SanphamMouseClicked

    private void Btn_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_SuaActionPerformed
        ButtonStatus(false);
        Btn_Sua.setEnabled(true);
        Btn_Luu.setEnabled(true);
        Btn_Huy.setEnabled(true);
        TextFieldsStatus(true);
        Lb_Currency_GiaNhap.setVisible(true);
        Lb_Currency_GiaXuat.setVisible(true);
        Txt_Dongianhap.setText(Txt_Dongianhap.getText().replace("$", ""));
        Txt_Dongiaxuat.setText(Txt_Dongiaxuat.getText().replace("$", ""));
    }//GEN-LAST:event_Btn_SuaActionPerformed

    private void Txt_TimkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Txt_TimkiemKeyReleased
        String KeyWord = Txt_Timkiem.getText();
        if (KeyWord.isEmpty()) {
            LoadProductList();
        } else {
            DefaultTableModel Tbl_Model = new DefaultTableModel() {
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };
            Vector<String> Title = new Vector<>();
            Vector<Object> Data = new Vector<>();
            Title.add("Mã Sản Phẩm");
            Title.add("Tên Sản Phẩm");
            Title.add("Nhà Cung Cấp");
            Title.add("Loại Hàng");
            Title.add("Đơn Vị Tính");
            Title.add("Đơn Giá Nhập");
            Title.add("Đơn Giá Xuất");
            Title.add("Số Lượng");
            Tbl_Model.setColumnIdentifiers(Title);

            try {
                Statement stm = cnt.createStatement();
                ResultSet rs = stm.executeQuery("SELECT MASP,TENSP,MANHACC,TENLH,DONVI,GIANHAP,GIAXUAT,SOLUONG FROM SANPHAM INNER"
                        + " JOIN LOAIHANG ON SANPHAM.MALH=LOAIHANG.MALH WHERE MASP LIKE N'%" + KeyWord + "%' AND SANPHAM.STATUS = 1 OR TENSP LIKE N'%" + KeyWord + "%' AND SANPHAM.STATUS = 1"
                        + " OR MANHACC LIKE N'%" + KeyWord + "%' AND SANPHAM.STATUS = 1 OR TENLH LIKE N'%" + KeyWord + "%' AND SANPHAM.STATUS = 1;");
                while (rs.next()) {
                    Vector<String> v = new Vector<>();
                    Tbl_Model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6) + "$", rs.getString(7) + "$", rs.getString(8)});
                }
            } catch (Exception e) {
            }

            Tbl_Sanpham.setModel(Tbl_Model);
        }
    }//GEN-LAST:event_Txt_TimkiemKeyReleased

    private void Txt_TimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_TimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_TimkiemActionPerformed

    private void Cbb_NhaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cbb_NhaccActionPerformed
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT TENLH FROM LOAIHANG INNER JOIN CCLOAIHANG ON LOAIHANG.MALH=CCLOAIHANG.MALH WHERE MANHACC = '" + Cbb_Nhacc.getSelectedItem().toString() + "'");
            Cbb_Loaihang.removeAllItems();
            Cbb_Loaihang.addItem("--Chọn--");
            while (rs.next()) {
                Cbb_Loaihang.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_Cbb_NhaccActionPerformed

    private void Btn_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_XoaActionPerformed
        int Xoasanpham = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sản phẩm này không?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
        if (Xoasanpham == JOptionPane.YES_OPTION && Tbl_Sanpham.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một sản phẩm trong bảng để xóa!");
        } else if (Xoasanpham == JOptionPane.YES_OPTION && Tbl_Sanpham.getSelectedRow() != -1) {
            boolean Status = new QuanLySanPham().XoaSanPham(Tbl_Sanpham.getValueAt(Tbl_Sanpham.getSelectedRow(), 0).toString());
            if (Status == true) {
                JOptionPane.showMessageDialog(null, "Xóa sản phẩm thành công!");
            } else {
                JOptionPane.showMessageDialog(null, "Xóa sản phẩm không thành công!");
            }
            LoadProductList();
        } else {
        }
    }//GEN-LAST:event_Btn_XoaActionPerformed

    private void Txt_MasanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_MasanphamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_MasanphamActionPerformed

    private void Txt_DongianhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_DongianhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_DongianhapActionPerformed

    private void ButtonStatus(boolean Status) {
        Btn_Them.setEnabled(Status);
        Btn_Sua.setEnabled(Status);
        Btn_Xoa.setEnabled(Status);
        Btn_Luu.setEnabled(false);
        Btn_Huy.setEnabled(false);
    }

    private void TextFieldsStatus(boolean Status) {
        Txt_Tensanpham.setEditable(Status);
        Txt_Dongianhap.setEditable(Status);
        Txt_Dongiaxuat.setEditable(Status);
        Txt_Donvitinh.setEditable(Status);
    }

    private void LoadProductList() {
        DefaultTableModel Tbl_Model = new DefaultTableModel() {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        Vector<String> Title = new Vector<>();
        Vector<Object> Data = new Vector<>();
        Title.add("Mã Sản Phẩm");
        Title.add("Tên Sản Phẩm");
        Title.add("Nhà Cung Cấp");
        Title.add("Loại Hàng");
        Title.add("Đơn Vị Tính");
        Title.add("Đơn Giá Nhập");
        Title.add("Đơn Giá Xuất");
        Title.add("Số Lượng");
        Tbl_Model.setColumnIdentifiers(Title);

        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT MASP,TENSP,MANHACC,TENLH,DONVI,GIANHAP,GIAXUAT,SOLUONG FROM SANPHAM INNER JOIN LOAIHANG ON SANPHAM.MALH=LOAIHANG.MALH WHERE SANPHAM.STATUS = 1;");
//            FORMAT(GIANHAP, 'C', 'en-us') AS GIANHAP,FORMAT(GIAXUAT, 'C', 'en-us')
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                Tbl_Model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6) + "$", rs.getString(7) + "$", rs.getString(8)});
            }
        } catch (Exception e) {
        }

        Tbl_Sanpham.setModel(Tbl_Model);
    }

    private void LoadNhaCC() {
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT MANHACC FROM NHACC");
            while (rs.next()) {
                Cbb_Nhacc.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void LoadLoaiHang() {
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT TENLH FROM LOAIHANG");
            while (rs.next()) {
                Cbb_Loaihang.addItem(rs.getString(1));
            }
        } catch (Exception e) {
        }
    }

    private void SetDefaultData() {
        Txt_Masanpham.setText(Tbl_Sanpham.getValueAt(0, 0).toString());
        Txt_Tensanpham.setText(Tbl_Sanpham.getValueAt(0, 1).toString());
        Cbb_Nhacc.setSelectedItem(Tbl_Sanpham.getValueAt(0, 2));
        Cbb_Loaihang.setSelectedItem(Tbl_Sanpham.getValueAt(0, 3));
        Txt_Donvitinh.setText(Tbl_Sanpham.getValueAt(0, 4).toString());
        Txt_Dongianhap.setText(Tbl_Sanpham.getValueAt(0, 5).toString());
        Txt_Dongiaxuat.setText(Tbl_Sanpham.getValueAt(0, 6).toString());
        Txt_Soluong.setText(Tbl_Sanpham.getValueAt(0, 7).toString());
    }

    private void SetThemMaSanPham() {
        ArrayList GetLastIndex = new ArrayList();
        String LastIndex = null;
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery("SELECT MASP FROM SANPHAM");
            while (rs.next()) {
                GetLastIndex.add(rs.getString(1));
            }

            for (int i = 0; i < GetLastIndex.size(); i++) {

            }
        } catch (Exception e) {
        }
    }

    private boolean CheckNum(String ObjectToCheck) {
        boolean Status = false;

        try {
            double TestDouble = Double.parseDouble(ObjectToCheck);
            Status = true;
        } catch (Exception e) {
            Status = false;
        }

        return Status;
    }

    private boolean CheckNumZero(String ObjectToCheck) {
        boolean Status = false;
        try {
            double i = Double.parseDouble(ObjectToCheck);
            if (i >= 0) {
                Status = true;
            } else if(i<0){
                Status = false;
            }
        } catch (Exception e) {
            Status = false;
        }
        
        return Status;
    }

//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(QLSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new QLSanPham().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Huy;
    private javax.swing.JButton Btn_Luu;
    private javax.swing.JButton Btn_Sua;
    private javax.swing.JButton Btn_Them;
    private javax.swing.JButton Btn_Xoa;
    private javax.swing.JComboBox<String> Cbb_Loaihang;
    private javax.swing.JComboBox<String> Cbb_Nhacc;
    private javax.swing.JLabel Lb_Currency_GiaNhap;
    private javax.swing.JLabel Lb_Currency_GiaXuat;
    private javax.swing.JLabel Lb_Dongianhap;
    private javax.swing.JLabel Lb_Dongiaxuat;
    private javax.swing.JLabel Lb_Donvitinh;
    private javax.swing.JLabel Lb_Loaihang;
    private javax.swing.JLabel Lb_Masanpham;
    private javax.swing.JLabel Lb_Nhacc;
    private javax.swing.JLabel Lb_Soluong;
    private javax.swing.JLabel Lb_Tensanpham;
    private javax.swing.JLabel Lb_Timkiem;
    private javax.swing.JScrollPane Table;
    private javax.swing.JTable Tbl_Sanpham;
    private javax.swing.JTextField Txt_Dongianhap;
    private javax.swing.JTextField Txt_Dongiaxuat;
    private javax.swing.JTextField Txt_Donvitinh;
    private javax.swing.JTextField Txt_Masanpham;
    private javax.swing.JTextField Txt_Soluong;
    private javax.swing.JTextField Txt_Tensanpham;
    private javax.swing.JTextField Txt_Timkiem;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
