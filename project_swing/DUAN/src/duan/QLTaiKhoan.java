/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package duan;

import Model.TaiKhoan;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Stack;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nguyen Toan
 */
public class QLTaiKhoan extends javax.swing.JDialog {

    /**
     * Creates new form QLTaiKhoan
     */
    private Connection cnt = new connectDB.connectDB().getConnection();

    DefaultTableModel tblModel;
    Vector<String> colHeaders;
    Vector<String> row;
    Vector<Vector> data;

    public QLTaiKhoan(JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        colHeaders = new Vector<>();
        colHeaders.add("Mã tài khoản");
        colHeaders.add("Tên tài khoản");
        colHeaders.add("Giới tính");
        colHeaders.add("Địa chỉ");
        colHeaders.add("SĐT");
        colHeaders.add("Kiểu Tài Khoản");
        row = new Vector<>();
        data = new Vector<>();
        tblModel = new DefaultTableModel(data, colHeaders) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }

        };
        tblTaikhoan.setModel(tblModel);
        setTitle("Quản lý tài khoản");
        loadTK();
        getInfo01();
        hidejbtLH(false);
        hidejbtSX(false);
        setLocationRelativeTo(null);
        setResizable(false);
//        loadCombobox();
    }

//    public void loadCombobox() {
//        String sql = "Select gioitinh,case when typeUser = 1 then N'Quản lý' else N'Thủ kho' end from taikhoan where status = 1 ";
//        try {
//            Statement stm = cnt.createStatement();
//            ResultSet rs = stm.executeQuery(sql);
//            while (rs.next()) {
//                this.cboGT.addItem(rs.getString(1));
//                this.cboKieuTK.addItem(rs.getString(2));
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
//        }
//
//    }
    public void loadTK() {
        String sql = "Select tenTK, Hoten,GioiTinh,DiaChi,SDT, case when typeUser = 1 then N'Quản lý' else N'Thủ kho' end from taikhoan where status = 1 ";
        data.removeAllElements();
        try {
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                Vector<String> v = new Vector<>();
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add(rs.getString(6));
                data.add(v);
                tblTaikhoan.updateUI();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Có lỗi khi Lấy dữ liệu từ database!");
        }
    }

    public void getInfo01() {
        txtManv.setText(tblTaikhoan.getValueAt(0, 0).toString());
        txtTennv.setText(tblTaikhoan.getValueAt(0, 1).toString());
        cboGT.setSelectedItem(tblTaikhoan.getValueAt(0, 2).toString());
        txtDC.setText(tblTaikhoan.getValueAt(0, 3).toString());
        txtSDT.setText(tblTaikhoan.getValueAt(0, 4).toString());
        cboKieuTK.setSelectedItem(tblTaikhoan.getValueAt(0, 5).toString());
    }

    private void hidejbtSX(boolean status) {
        jbtSua.setEnabled(status);
        jbtXoa.setEnabled(status);
        jbtDatlaimk.setEnabled(status);
        jbtXemmk.setEnabled(status);
    }

    private void hidejbtLH(boolean status) {
        jbtLuu.setEnabled(status);
        jbtHuy.setEnabled(status);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtManv = new javax.swing.JTextField();
        txtTennv = new javax.swing.JTextField();
        txtDC = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        cboGT = new javax.swing.JComboBox<>();
        cboKieuTK = new javax.swing.JComboBox<>();
        jbtThem = new javax.swing.JButton();
        jbtSua = new javax.swing.JButton();
        jbtXoa = new javax.swing.JButton();
        jbtLuu = new javax.swing.JButton();
        jbtDatlaimk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaikhoan = new javax.swing.JTable();
        jbtThoat = new javax.swing.JButton();
        jbtXemmk = new javax.swing.JButton();
        jbtHuy = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTK = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("Quản lý tài khoản");

        jLabel2.setText("Mã nhân viên");

        jLabel3.setText("Tên nhân viên");

        jLabel5.setText("Giới tính");

        jLabel6.setText("Địa chỉ");

        jLabel7.setText("Số điện thoại");

        jLabel8.setText("Kiểu tài khoản");

        txtManv.setEditable(false);
        txtManv.setToolTipText("Mã nhân viên");

        txtTennv.setToolTipText("Tên nhân viên");

        txtDC.setToolTipText("Địa chỉ");

        txtSDT.setToolTipText("Số điện thoại");

        cboGT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Chọn --", "Nam", "Nữ", "Khác" }));
        cboGT.setToolTipText("Giới tính");
        cboGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGTActionPerformed(evt);
            }
        });

        cboKieuTK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thủ Kho", "Quản lý", "-- Chọn --" }));
        cboKieuTK.setToolTipText("Kiểu tài khoản");
        cboKieuTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKieuTKActionPerformed(evt);
            }
        });

        jbtThem.setText("Thêm");
        jbtThem.setToolTipText("Thêm nhân viên mới");
        jbtThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtThemActionPerformed(evt);
            }
        });

        jbtSua.setText("Sửa");
        jbtSua.setToolTipText("Sửa tài khoản nhân viên");
        jbtSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSuaActionPerformed(evt);
            }
        });

        jbtXoa.setText("Xóa");
        jbtXoa.setToolTipText("Xóa nhân viên");
        jbtXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtXoaActionPerformed(evt);
            }
        });

        jbtLuu.setText("Lưu");
        jbtLuu.setToolTipText("Lưu tài khoản");
        jbtLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtLuuActionPerformed(evt);
            }
        });

        jbtDatlaimk.setText("Đặt lại MK");
        jbtDatlaimk.setToolTipText("Đặt mật khẩu về mặc định");
        jbtDatlaimk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDatlaimkActionPerformed(evt);
            }
        });

        tblTaikhoan.setAutoCreateRowSorter(true);
        tblTaikhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTaikhoan.setToolTipText("Dữ liệu");
        tblTaikhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTaikhoanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTaikhoan);

        jbtThoat.setText("Thoát");
        jbtThoat.setToolTipText("Thoát");
        jbtThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtThoatActionPerformed(evt);
            }
        });

        jbtXemmk.setText("Xem MK");
        jbtXemmk.setToolTipText("Xem mật khẩu của tài khoản");
        jbtXemmk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtXemmkActionPerformed(evt);
            }
        });

        jbtHuy.setText("Hủy");
        jbtHuy.setToolTipText("Hủy");
        jbtHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtHuyActionPerformed(evt);
            }
        });

        jLabel4.setText("Tìm kiếm");

        txtTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTKActionPerformed(evt);
            }
        });
        txtTK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTKKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDC, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSDT, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboKieuTK, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtManv)
                    .addComponent(txtTennv)
                    .addComponent(cboGT, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbtSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbtDatlaimk, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtXemmk, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTennv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cboGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cboKieuTK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtThem)
                            .addComponent(jbtLuu))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtXoa)
                            .addComponent(jbtSua))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtDatlaimk)
                            .addComponent(jbtXemmk))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtHuy)
                            .addComponent(jbtThoat))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtDatlaimkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDatlaimkActionPerformed
        // TODO add your handling code here:
        int row = tblTaikhoan.getSelectedRow();
        String id = tblTaikhoan.getValueAt(row, 0).toString();
        boolean Status = new TaiKhoan().datlaiMK(id);

    }//GEN-LAST:event_jbtDatlaimkActionPerformed

    private void tblTaikhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTaikhoanMouseClicked
        // TODO add your handling code here:
        txtManv.setText(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 0).toString());
        txtTennv.setText(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 1).toString());
        cboGT.setSelectedItem(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 2).toString());
        txtDC.setText(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 3).toString());
        txtSDT.setText(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 4).toString());
        cboKieuTK.setSelectedItem(tblTaikhoan.getValueAt(tblTaikhoan.getSelectedRow(), 5).toString());
        hidejbtSX(true);
    }//GEN-LAST:event_tblTaikhoanMouseClicked

    private void cboGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboGTActionPerformed

    private void jbtThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtThemActionPerformed
        // TODO add your handling code here:
        hidejbtSX(false);
        hidejbtLH(true);
        txtManv.setEditable(true);
        txtManv.setText("");
        txtTennv.setText("");
        cboGT.setSelectedItem("-- Chọn --");
        txtDC.setText("");
        txtSDT.setText("");
        cboKieuTK.setSelectedItem("-- Chọn --");
    }//GEN-LAST:event_jbtThemActionPerformed

    private void jbtLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtLuuActionPerformed
        // TODO add your handling code here:
        int i = 0;
//        i = this.cboKieuTK.getSelectedIndex();
        boolean Status = new TaiKhoan().themTaiKhoan(txtManv.getText(), txtTennv.getText(),
                cboGT.getSelectedItem().toString(), txtDC.getText(), txtSDT.getText(), i);

        if (Status == true) {
            if (i == 1) {
                JOptionPane.showMessageDialog(this, "Thêm tài khoản Quản lý thành công");
            } else if (i == 2) {
                JOptionPane.showMessageDialog(this, "Thêm tài khoản Thủ kho thành công");
            }
            Vector<String> v = new Vector<String>();
            v.add(txtManv.getText());
            v.add(txtTennv.getText());
            v.add((String) cboGT.getSelectedItem());
            v.add(txtDC.getText());
            v.add(txtSDT.getText());
            v.add((String) cboKieuTK.getSelectedItem());
            data.add(v);
            tblTaikhoan.updateUI();
            txtManv.setEditable(false);
            hidejbtSX(true);
            hidejbtLH(false);
        } else if (Status == false) {

        }
    }//GEN-LAST:event_jbtLuuActionPerformed

    private void jbtXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtXoaActionPerformed
        // TODO add your handling code here:

        int rowselected = tblTaikhoan.getSelectedRow();
        String id = tblTaikhoan.getValueAt(rowselected, 0).toString();
        if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa tài khoản này không?",
                "Xóa dữ liệu", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            boolean Status = new TaiKhoan().xoaTaiKhoan(id);
            JOptionPane.showMessageDialog(this, "Xóa tài khoản thành công tài khoản " + txtManv.getText());
            Vector<String> v = new Vector<>();
            v.add(txtManv.getText());
            v.add(txtTennv.getText());
            v.add(cboGT.getSelectedItem().toString());
            v.add(txtDC.getText());
            v.add(txtSDT.getText());
            v.add(cboKieuTK.getSelectedItem().toString());
            data.remove(v);
            tblTaikhoan.updateUI();
        } else {
            JOptionPane.showMessageDialog(this, "Không xóa đc");
        }
    }//GEN-LAST:event_jbtXoaActionPerformed


    private void jbtSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSuaActionPerformed
        // TODO add your handling code here:
        int i = 0;
        if (cboKieuTK.getSelectedItem() == "Quản lý") {
            i = 1;
        } else if (cboKieuTK.getSelectedItem() == "Thủ kho") {
            i = 0;
        }

        int row = tblTaikhoan.getSelectedRow();
        String id = tblTaikhoan.getValueAt(row, 0).toString();
        boolean Status = new TaiKhoan().suaTaiKhoan(id, txtTennv.getText(), cboGT.getSelectedItem().toString(), txtDC.getText(), txtSDT.getText(), i);
        if (Status == true) {
            Vector<String> v = new Vector<>();
            v.add(txtManv.getText());
            v.add(txtTennv.getText());
            v.add(cboGT.getSelectedItem().toString());
            v.add(txtDC.getText());
            v.add(txtSDT.getText());
            v.add(cboKieuTK.getSelectedItem().toString());
            data.remove(row);
            data.add(v);
            tblTaikhoan.updateUI();
        } else if (Status == false) {
            JOptionPane.showMessageDialog(this, "Không thể thay đổi Mã tài khoản");
        }

    }//GEN-LAST:event_jbtSuaActionPerformed

    private void jbtThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtThoatActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbtThoatActionPerformed

    private void jbtXemmkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtXemmkActionPerformed
        // TODO add your handling code here:
        int row = tblTaikhoan.getSelectedRow();
        String id = tblTaikhoan.getValueAt(row, 0).toString();
        String Status = new TaiKhoan().xemMK(id);
    }//GEN-LAST:event_jbtXemmkActionPerformed

    private void jbtHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtHuyActionPerformed
        // TODO add your handling code here:
        hidejbtLH(false);
        getInfo01();
    }//GEN-LAST:event_jbtHuyActionPerformed

    private void txtTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTKActionPerformed

    private void txtTKKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTKKeyReleased

        if (!txtTK.getText().isEmpty()) {
            data.removeAllElements();

//            boolean Status = new TaiKhoan().timkiemDong(txtTK.getText());
//            tblTaikhoan.updateUI();
            try {
                String sql = "Select tenTK, Hoten,GioiTinh,DiaChi,SDT, "
                        + "+case when typeUser = 1 then N'Quản lý' else N'Thủ kho' end  from TaiKhoan "
                        + "where tenTK like '%" + txtTK.getText() + "%' and status = 1 "
                        + "or HoTen like N'%" + txtTK.getText() + "%' and status = 1 "
                        + "or GioiTinh like N'%" + txtTK.getText() + "%' and status = 1 "
                        + "or DiaChi like N'%" + txtTK.getText() + "%' and status = 1 "
                        + "or SDT like '%" + txtTK.getText() + "%' and status = 1";

                Statement stm = cnt.createStatement();
                ResultSet rs = stm.executeQuery(sql);
                while (rs.next()) {
                    Vector<String> v = new Vector<>();
                    v.add(rs.getString(1));
                    v.add(rs.getString(2));
                    v.add(rs.getString(3));
                    v.add(rs.getString(4));
                    v.add(rs.getString(5));
                    v.add(rs.getString(6));
                    data.add(v);
                    tblTaikhoan.updateUI();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Lỗi...");
            }
        } else if (txtTK.getText().isEmpty()) {
            loadTK();
        }

    }//GEN-LAST:event_txtTKKeyReleased

    private void cboKieuTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKieuTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboKieuTKActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Views.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Views.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Views.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Views.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new QLTaiKhoan().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboGT;
    private javax.swing.JComboBox<String> cboKieuTK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtDatlaimk;
    private javax.swing.JButton jbtHuy;
    private javax.swing.JButton jbtLuu;
    private javax.swing.JButton jbtSua;
    private javax.swing.JButton jbtThem;
    private javax.swing.JButton jbtThoat;
    private javax.swing.JButton jbtXemmk;
    private javax.swing.JButton jbtXoa;
    private javax.swing.JTable tblTaikhoan;
    private javax.swing.JTextField txtDC;
    private javax.swing.JTextField txtManv;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTennv;
    // End of variables declaration//GEN-END:variables
}
